FORMAT: 1A

# PY-RBAC RELATIONSHIP API

Endpoints to manage relationships between groups, profiles, users and permissions

# Group Relationship management

## Manage relationships between users and groups  [/pap/usergroup/{user_id}/{group_id}]
+ Parameters
    + user_id: 1 (required, string) - The user ID
    + group_id: 101 (required, string) - The group ID

### Add user to group [POST]

+ Request
    + Headers

            Authorization: Bearer JWT


+ Response 200 (application/json)

            {
                "status": 200,
                "message": "ok"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No user found with this ID"
            }


+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No group found with this ID"
            }


### Remove a user from group [DELETE]

+ Request
    + Headers

            Authorization: Bearer JWT

+ Response 200 (application/json)

            {
                "status": 200,
                "message": "ok"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No user found with this ID"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No group found with this ID"
            }

+ Response 404 (application/json)

            {
                "status": 400,
                "message": "Can't remove user. A user must always be in one role group"
            }


## Manage relationships between users and permissions  [/pap/userpermissions/{user_id}/{permission_id}]
+ Parameters
    + user_id: 1 (required, string) - The user ID
    + permission_id: 201 (required, string) - The permission ID to be changed

### Give a permission to a user [POST]

+ Request
    + Headers

            Authorization: Bearer JWT

+ Response 200 (application/json)

            {
                "status": 200,
                "message": "ok"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No user found with this ID"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No permission found with this ID"
            }


### Revoke a user permission [DELETE]

+ Request
    + Headers

            Authorization: Bearer JWT

+ Response 200 (application/json)

            {
                "status": 200,
                "message": "ok"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No user found with this ID"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No permission found with this ID"
            }


## Manage relationships between group and permissions  [/pap/grouppermissions/{group_id}/{permission_id}]
+ Parameters
    + group_id: 101 (required, string) - The group ID
    + permission_id: 201 (required, string) - The permission ID to be changed

### Give a permission to a group [POST]

+ Request
    + Headers

            Authorization: Bearer JWT

+ Response 200 (application/json)

            {
                "status": 200,
                "message": "ok"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No group found with this ID"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No permission found with this ID"
            }


### Revoke a group permission [DELETE]

+ Request
    + Headers

            Authorization: Bearer JWT

+ Response 200 (application/json)

            {
                "status": 200,
                "message": "ok"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No group found with this ID"
            }

+ Response 404 (application/json)

            {
                "status": 404,
                "message": "No permission found with this ID"
            }

